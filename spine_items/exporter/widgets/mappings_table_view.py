######################################################################################################################
# Copyright (C) 2017-2021 Spine project consortium
# This file is part of Spine Items.
# Spine Items is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General
# Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option)
# any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General
# Public License for more details. You should have received a copy of the GNU Lesser General Public License along with
# this program. If not, see <http://www.gnu.org/licenses/>.
######################################################################################################################
"""
Contains MappingsTableView.

:author: M. Marin (KTH)
:date:   22.4.2021
"""
from PySide2.QtWidgets import QTableView
from PySide2.QtCore import Signal


class MappingsTableView(QTableView):
    """A QTableView subclass for listing mappings in the Exporter specification editor.
    It mainly handles drag and drop for defining the writing order.
    """

    write_order_changed = Signal(int, int)

    def dragEnterEvent(self, ev):
        """Only accepts drag enter events generated by this view."""
        ev.setAccepted(ev.source() is self)

    def dragMoveEvent(self, ev):
        """Only accepts drag move events over the second column."""
        index = self.indexAt(ev.pos())
        ev.setAccepted(index.column() == 1)

    def dropEvent(self, ev):
        """Finds concerned rows and emits signal."""
        index = self.indexAt(ev.pos())
        source_index = self.model().mapToSource(index)
        from_row = source_index.row()
        to_row = int(ev.mimeData().text())
        self.write_order_changed.emit(from_row, to_row)
